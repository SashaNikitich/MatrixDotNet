{
  "api/MatrixDemonstrate.html": {
    "href": "api/MatrixDemonstrate.html",
    "title": "Namespace MatrixDemonstrate | MatrixDotNet",
    "keywords": "Namespace MatrixDemonstrate Classes Program"
  },
  "api/MatrixDemonstrate.Program.html": {
    "href": "api/MatrixDemonstrate.Program.html",
    "title": "Class Program | MatrixDotNet",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : MatrixDemonstrate Assembly : MatrixDemonstrate.dll Syntax public sealed class Program"
  },
  "api/MatrixDotNet.Exceptions.html": {
    "href": "api/MatrixDotNet.Exceptions.html",
    "title": "Namespace MatrixDotNet.Exceptions | MatrixDotNet",
    "keywords": "Namespace MatrixDotNet.Exceptions Classes MatrixDotNetException Represent exception for Matrix<T>"
  },
  "api/MatrixDotNet.Exceptions.MatrixDotNetException.html": {
    "href": "api/MatrixDotNet.Exceptions.MatrixDotNetException.html",
    "title": "Class MatrixDotNetException | MatrixDotNet",
    "keywords": "Class MatrixDotNetException Represent exception for Matrix<T> Inheritance System.Object System.Exception MatrixDotNetException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : MatrixDotNet.Exceptions Assembly : MatrixDotNet.dll Syntax public class MatrixDotNetException : Exception, ISerializable Constructors MatrixDotNetException(String) Exception. Declaration public MatrixDotNetException(string message) Parameters Type Name Description System.String message MatrixDotNetException(String, String) Exception. Declaration public MatrixDotNetException(string message, string argument) Parameters Type Name Description System.String message System.String argument MatrixDotNetException(String, String, String) Exception. Declaration public MatrixDotNetException(string message, string argument1, string argument2) Parameters Type Name Description System.String message System.String argument1 System.String argument2 Properties Argument1 Gets argument. Declaration public string Argument1 { get; } Property Value Type Description System.String Argument2 Gets argument. Declaration public string Argument2 { get; } Property Value Type Description System.String Message Gets message. Declaration public string Message { get; } Property Value Type Description System.String Implements System.Runtime.Serialization.ISerializable"
  },
  "api/MatrixDotNet.Extensions.html": {
    "href": "api/MatrixDotNet.Extensions.html",
    "title": "Namespace MatrixDotNet.Extensions | MatrixDotNet",
    "keywords": "Namespace MatrixDotNet.Extensions Classes MatrixExtension Represents Matrix extension."
  },
  "api/MatrixDotNet.Extensions.MatrixExtension.html": {
    "href": "api/MatrixDotNet.Extensions.MatrixExtension.html",
    "title": "Class MatrixExtension | MatrixDotNet",
    "keywords": "Class MatrixExtension Represents Matrix extension. Inheritance System.Object MatrixExtension Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : MatrixDotNet.Extensions Assembly : MatrixDotNet.dll Syntax public static class MatrixExtension Methods Gause(Matrix<Double>, Double[]) Gets determinant matrix by Gause algorithm. Declaration public static double[] Gause(this Matrix<double> A1, double[] b1) Parameters Type Name Description Matrix < System.Double > A1 System.Double [] b1 Returns Type Description System.Double [] GetColumn<T>(Matrix<T>, Int32) Gets column array of matrix by columns index. Declaration public static T[] GetColumn<T>(this Matrix<T> matrix, int index) where T : struct Parameters Type Name Description Matrix <T> matrix matrix. System.Int32 index index. Returns Type Description T[] Type Parameters Name Description T unmanaged type. Exceptions Type Condition System.ArgumentNullException System.IndexOutOfRangeException GetDeterminate<T>(Matrix<T>) Gets determinant of matrix. Declaration public static double GetDeterminate<T>(this Matrix<T> matrix) where T : struct Parameters Type Name Description Matrix <T> matrix matrix. Returns Type Description System.Double double. Type Parameters Name Description T unmanaged type Exceptions Type Condition MatrixDotNetException GetRow<T>(Matrix<T>, Int32) Gets row array of matrix by row index. Declaration public static T[] GetRow<T>(this Matrix<T> matrix, int index) where T : struct Parameters Type Name Description Matrix <T> matrix System.Int32 index Returns Type Description T[] Type Parameters Name Description T Exceptions Type Condition System.NullReferenceException System.IndexOutOfRangeException KramerSolve<T>(Matrix<T>, T[]) Gets determinant matrix by Kramer algorithm. Declaration public static double[] KramerSolve<T>(this Matrix<T> matrix, T[] arr) where T : struct Parameters Type Name Description Matrix <T> matrix matrix. T[] arr array. Returns Type Description System.Double [] Type Parameters Name Description T unmanaged type. Exceptions Type Condition MatrixDotNetException ToMatrixDotNet<T>(T[,]) Convert primitive matrix to Matrix<T> . Declaration public static Matrix<T> ToMatrixDotNet<T>(this T[, ] matrix) where T : struct Parameters Type Name Description T[,] matrix primitive matrix. Returns Type Description Matrix <T> Type Parameters Name Description T unmanaged type ToPrimitive<T>(Matrix<T>) Convert matrix to primitive matrix. Declaration public static T[, ] ToPrimitive<T>(this Matrix<T> matrix) where T : struct Parameters Type Name Description Matrix <T> matrix Returns Type Description T[,] Type Parameters Name Description T Transport<T>(Matrix<T>) Gets transport matrix. Declaration public static Matrix<T> Transport<T>(this Matrix<T> matrix) where T : struct Parameters Type Name Description Matrix <T> matrix the matrix. Returns Type Description Matrix <T> Type Parameters Name Description T unmanaged type."
  },
  "api/MatrixDotNet.html": {
    "href": "api/MatrixDotNet.html",
    "title": "Namespace MatrixDotNet | MatrixDotNet",
    "keywords": "Namespace MatrixDotNet Classes Matrix<T> Represents math matrix. Enums State State column or row"
  },
  "api/MatrixDotNet.Matrix-1.html": {
    "href": "api/MatrixDotNet.Matrix-1.html",
    "title": "Class Matrix<T> | MatrixDotNet",
    "keywords": "Class Matrix<T> Represents math matrix. Inheritance System.Object Matrix<T> Implements System.ICloneable Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : MatrixDotNet Assembly : MatrixDotNet.dll Syntax public class Matrix<T> : ICloneable where T : struct Type Parameters Name Description T integral type. Constructors Matrix(T[,]) Initialize matrix. Declaration public Matrix(T[, ] matrix) Parameters Type Name Description T[,] matrix the matrix. Matrix(Int32, Int32) Creates matrix. Declaration public Matrix(int row, int col) Parameters Type Name Description System.Int32 row row System.Int32 col col Properties Columns Gets length columns of matrix. Declaration public int Columns { get; } Property Value Type Description System.Int32 IsSquare Checks square matrix. Declaration public bool IsSquare { get; } Property Value Type Description System.Boolean Item[Int32] Gets or sets array by row. Declaration public T[] this[int i] { get; set; } Parameters Type Name Description System.Int32 i the row Property Value Type Description T[] Exceptions Type Condition System.IndexOutOfRangeException Item[Int32, State] Gets or sets array by rows or columns. Declaration public T[] this[int i, State dimension] { get; set; } Parameters Type Name Description System.Int32 i State dimension Property Value Type Description T[] Exceptions Type Condition System.IndexOutOfRangeException Item[Int32, Int32] Gets element matrix. Declaration public T this[int i, int j] { get; set; } Parameters Type Name Description System.Int32 i the index by rows. System.Int32 j the index by columns. Property Value Type Description T Exceptions Type Condition System.IndexOutOfRangeException Throws if index out of range Length Gets length matrix. Declaration public int Length { get; } Property Value Type Description System.Int32 MNorm Gets m-norm of matrix. Declaration public T MNorm { get; } Property Value Type Description T Rank Gets rank of matrix. Declaration public double Rank { get; } Property Value Type Description System.Double Rows Gets length row of matrix. Declaration public int Rows { get; } Property Value Type Description System.Int32 Methods Clone() Clones matrix. Declaration public object Clone() Returns Type Description System.Object object. Equals(Object) Checks on equals two matrix by rows - i ,columns - j Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) Exceptions Type Condition System.ArgumentException GetHashCode() Gets hash code. Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() LNorm() Gets l-norm of matrix. Declaration public double LNorm() Returns Type Description System.Double ToString() Declaration public override string ToString() Returns Type Description System.String System.String Overrides System.Object.ToString() Operators Addition(Matrix<T>, Matrix<T>) Add operation of two matrix. Declaration public static Matrix<T> operator +(Matrix<T> left, Matrix<T> right) Parameters Type Name Description Matrix <T> left left matrix. Matrix <T> right right matrix. Returns Type Description Matrix <T> Matrix<T> Exceptions Type Condition MatrixDotNetException Length of two matrix not equal. Division(T, Matrix<T>) Divide operation matrix on digit left side. Declaration public static Matrix<T> operator /(T digit, Matrix<T> matrix) Parameters Type Name Description T digit Matrix <T> matrix Returns Type Description Matrix <T> Division(Matrix<T>, T) Divide operation matrix on digit right side. Declaration public static Matrix<T> operator /(Matrix<T> matrix, T digit) Parameters Type Name Description Matrix <T> matrix T digit Returns Type Description Matrix <T> Multiply(T, Matrix<T>) Multiply operation matrix on digit left side. Declaration public static Matrix<T> operator *(T digit, Matrix<T> matrix) Parameters Type Name Description T digit digit Matrix <T> matrix matrix Returns Type Description Matrix <T> Matrix<T> Multiply(Matrix<T>, T) Multiply operation matrix on digit right side. Declaration public static Matrix<T> operator *(Matrix<T> matrix, T digit) Parameters Type Name Description Matrix <T> matrix matrix. T digit digit. Returns Type Description Matrix <T> Matrix<T> Multiply(Matrix<T>, Matrix<T>) Multiply operation of two matrix. Declaration public static Matrix<T> operator *(Matrix<T> left, Matrix<T> right) Parameters Type Name Description Matrix <T> left Matrix <T> right Returns Type Description Matrix <T> Exceptions Type Condition MatrixDotNetException Subtraction(Matrix<T>, Matrix<T>) Subtract operation of two matrix. Declaration public static Matrix<T> operator -(Matrix<T> left, Matrix<T> right) Parameters Type Name Description Matrix <T> left left matrix. Matrix <T> right right matrix. Returns Type Description Matrix <T> Matrix<T> . Exceptions Type Condition MatrixDotNetException Length of two matrix not equal. Implements System.ICloneable Extension Methods MatrixExtension.GetRow<T>(Matrix<T>, Int32) MatrixExtension.GetColumn<T>(Matrix<T>, Int32) MatrixExtension.Transport<T>(Matrix<T>) MatrixExtension.ToPrimitive<T>(Matrix<T>) MatrixExtension.GetDeterminate<T>(Matrix<T>) MatrixExtension.KramerSolve<T>(Matrix<T>, T[])"
  },
  "api/MatrixDotNet.State.html": {
    "href": "api/MatrixDotNet.State.html",
    "title": "Enum State | MatrixDotNet",
    "keywords": "Enum State State column or row Namespace : MatrixDotNet Assembly : MatrixDotNet.dll Syntax public enum State Fields Name Description Column Row"
  }
}